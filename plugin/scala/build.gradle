plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.2.1'

    id 'groovy'

    id 'com.diffplug.spotless' version '6.24.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

sourceSets {
    functionalTest
}

dependencies {
    implementation(project(":base"))

    implementation 'com.julianpeeters:avrohugger-core_2.13:2.8.3'
    implementation 'com.julianpeeters:avrohugger-filesorter_2.13:2.8.3'

    testImplementation('org.spockframework:spock-core:2.3-groovy-3.0') {
        exclude group: 'org.codehaus.groovy'
    }

    functionalTestImplementation('org.spockframework:spock-core:2.3-groovy-3.0') {
        exclude group: 'org.codehaus.groovy'
    }
}

group = "io.github.kivanval"
version = "1.0.0-SNAPSHOT"

gradlePlugin {
    plugins {
        gravrotyScalaBase {
            id = 'io.github.kivanval.gravroty.scala.base'
            implementationClass = 'io.github.kivanval.gravroty.scala.GravrotyScalaBasePlugin'
        }
        gravrotyScala {
            id = 'io.github.kivanval.gravroty.scala'
            implementationClass = 'io.github.kivanval.gravroty.scala.GravrotyScalaPlugin'
        }
    }
    testSourceSets(sourceSets.functionalTest)
}

spotless {
    groovy {
        importOrder()
        removeSemicolons()
        greclipse().configFile(rootProject.file('greclipse.properties'))
        excludeJava()
        licenseHeaderFile(rootProject.file('copyright.txt'))
    }
}

def functionalTestTask = tasks.register("functionalTest", Test) {
    description = 'Runs the functional tests.'
    group = "verification"
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath

    useJUnitPlatform()
    mustRunAfter test
}

check {
    dependsOn(functionalTestTask)
}

test {
    useJUnitPlatform()
}



